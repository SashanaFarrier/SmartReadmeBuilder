@using SmartReadmeBuilder.Models
@model NoteViewModel;

@{
    ViewData["Title"] = "Markdowns";
}

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="container-fluid">
    <h1 class="display-4">Markdown Logs</h1>
    @* <h2>Manage your Prompts.</h2> *@
        <div class="mt-3">
            <div class="d-flex justify-content-between">
            @if (ViewBag.Notes != null)
            {
                <div class="prompt-history col-4">
                    <h3>Prompt history</h3>
                    <ul class="list-group">
                        @foreach (var note in (List<Note>)ViewBag.Notes)
                        {
                            <li class="list-group-item">
                                <div class="note-content">
                                    <p>@note.Text</p>
                                    <span class="note-timestamp">@note.CreatedOn.ToString("g")</span>
                                </div>
                                <div>
                                    <form asp-controller="Markdown" asp-action="RegenerateMarkdown">
                                        <input type="hidden" name="id" value="@note.Id" />
                                        <button class="btn btn-secondary btn-sm">Regenerate markdown</button>
                                    </form>

                                    <form asp-controller="Notes" asp-action="EditPrompt" asp-route-id="@note.Id" method="get" class="float-end">
                                        <input type="hidden" name="id" value="@note.Id" />
                                        <button type="submit" class="btn btn-secondary btn-sm">Edit</button>
                                    </form>
                                    <form asp-controller="Notes" asp-action="DeleteNote" method="post" class="float-end">
                                        <input type="hidden" name="id" value="@note.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                    </form>
                                </div>
                                
                            </li>
                        }
                    </ul>
                </div>
                <div class="readmes col-7">
                    <h3>Markdowns:</h3>
                    <ul class="list-group">
                        @foreach (var note in (List<Note>)ViewBag.Notes)
                        {
                            
                            <li class="list-group-item">
                                <div class="note-content">
                                    <pre>@note.MarkdownText</pre>
                                    @* <span class="note-timestamp">@note.CreatedOn.ToString("g")</span> *@
                                </div>
                                <button class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#exampleModal">Push to Github</button>

                                @await Html.PartialAsync("_GithubCredentials", new GitHubInfo {NoteId = @note.Id  } )
                                @* <form asp-action="DeleteNote" method="post" class="float-end">
                        <input type="hidden" name="id" value="@note.Id" />
                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                    </form> *@
                            </li>
                        }
                    </ul>
                </div>
               
            }
            </div>
           
        </div> 
</div>
<!-- Button trigger modal -->
@* <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button> *@

<!-- Modal -->
